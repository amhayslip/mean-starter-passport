<div class="col-sm-8 col-sm-offset-2 lesson">
  <div class="page-header">
    <h2>Responsive Layout and Media Queries</h2>
    <a href="/#/">Back Home</a>
  </div>

  Notes: As a teaching project, show a wire-frame, then build it. 

  <div class="topic">
    <h3>Lesson Overview</h3>
      <p></p>
      <ul>
        <li>Media Queries</li>
        <li>Layout</li>
      </ul>
  </div>

  <hr>

  <div class="topic">
    <h3>Setup</h3>
      <p>Partner up again and cd into your <strong>secret-tel-aviv</strong> project</p>
  </div>

  <hr>

  <div class="topic">
    <h4>Responsive Design</h4>
    <p>The term "responsive" has been pretty trendy over the last few years. It basically refers to a webpage's ability to respond to any screen size. We want to make sure all our pages are adaptable at different widths as we build them. Here are a few principles to keep in mind:</p>

    <h5>Fluid Widths</h5>
    <p>Fluid widths (percentages) mean that our content will always take up as many pixels of the screen that is available (for example, we gave our columns the width of 33.33%).</p>

    <h5>Collapsing Menus</h5>
    <p>Often times you will see large menus that collapse at certain widths making it easier for the user the navigate on small screens.</p>

    <h5>Media Queries</h5>
    <p>Media Queries are statements inside CSS that apply styles to our pages depending on the width of the viewport. We'll go over these more in depth now.</p>
  </div>

  <hr>

  <div class="topic">
    <h4>Media Queries</h4>
    <p>The following CSS would hide the img element whenever the screen's width is below 700px.</p>
    <pre style="background:#000;color:#f8f8f8"><span style="color:#e28964">@media</span> (<span style="color:#9b859d">max-width</span>: <span style="color:#3387cc">700<span style="color:#e28964">px</span></span>) {
  <span style="color:#cda869">img</span> {
    <span style="color:#c5af75">display</span>: <span style="color:#f9ee98">none</span>;
  }
}
</pre>

    <p>Likewise, this code would hide the img element whenever the screen's width is above 700px.</p>
    <pre style="background:#000;color:#f8f8f8"><span style="color:#e28964">@media</span> (<span style="color:#9b859d">min-width</span>: <span style="color:#3387cc">700<span style="color:#e28964">px</span></span>) {
  <span style="color:#cda869">img</span> {
    <span style="color:#c5af75">display</span>: <span style="color:#f9ee98">none</span>;
  }
}
</pre>

    <p>We can get more specific by adding both a <strong>min</strong> and <strong>max</strong>, but the point we're making here is that anything inside the brackets of the media query is only applied when the media query is true. Let's implement this into our Secret Tel Aviv Project.</p>

    <h5>Device or Content?</h5>
    <p>There are a few theories of design out there around <em>where</em> we should put media queries. Should it be 786px (the standard for tablets)? Then we have to always keep up with the latest device standards. Another opinion is that they should be whenever the content start to look ugly. Let's go with that one.</p>

    <img src="http://www.elevationacademy.co/wp-content/uploads/2016/03/Screen-Shot-2016-03-01-at-3.28.46-PM.png">

    <p>Our images look too small here. This is about 700px, so let's add one here. Instead of have three columns, we'll collapse our layout down to one like this:</p>

    <img src="http://www.elevationacademy.co/wp-content/uploads/2016/03/Screen-Shot-2016-03-01-at-3.14.09-PM.png">

    <p>Add the following CSS to the bottom of your <strong>style.css</strong> file:</p>
    <pre style="background:#000;color:#f8f8f8"><span style="color:#e28964">@media</span> (<span style="color:#9b859d">max-width</span>: <span style="color:#3387cc">700<span style="color:#e28964">px</span></span>) {
  <span style="color:#9b703f">.column</span> {
    <span style="color:#c5af75">width</span>: <span style="color:#dd7b3b">100<span style="color:#e28964">%</span></span>;
  }
}
</pre>
    <p>We went with 100% because we know that will be good for however small the screen gets. Now whenever someone visits your page on their phone, they can see the cool restaurant pics!</p>
  </div>

  <hr>

  <div class="topic">
    <h4>Night Life</h4>
    <p>Let's journey forward and build our next page! Let's talk about bars and stuff. Here is what we want to build:</p>

    <img src="http://www.elevationacademy.co/wp-content/uploads/2016/03/Screen-Shot-2016-03-02-at-8.15.40-AM.png"> 

    <p>It looks like we have a two column layout - one for the main bulk of our post about bars, and little side-bar for other stuff. Where to start?</p>

    <h5>Section</h5>
    <p>Go ahead and add another section called "night-life".</p>
    <pre style="background:#000;color:#f8f8f8"><span style="color:#89bdff">&lt;<span style="color:#89bdff">section</span> <span style="color:#89bdff">class</span>=<span style="color:#65b042">"night-life"</span>></span>

<span style="color:#89bdff">&lt;/<span style="color:#89bdff">div</span>></span>
</pre>

    <h5>Rows</h5>
    <p>Technically, this time around we only have one row. So Let's add a div with a class of "row":</p>
    <pre style="background:#000;color:#f8f8f8"><span style="color:#89bdff">&lt;<span style="color:#89bdff">section</span> <span style="color:#89bdff">class</span>=<span style="color:#65b042">"night-life"</span>></span>
  <span style="color:#89bdff">&lt;<span style="color:#89bdff">div</span> <span style="color:#89bdff">class</span>=<span style="color:#65b042">"row"</span>></span>
  <span style="color:#89bdff">&lt;/<span style="color:#89bdff">div</span>></span>
<span style="color:#89bdff">&lt;/<span style="color:#89bdff">div</span>></span>
</pre>
  
    <h5>Columns</h5>
    <p>We have two columns. One looks to be about 70% of the page and the other (the side-bar) about 30%. Let's name our column divs accordingly. Add the following HTML (and sneak our header in there):</p>
    <pre style="background:#000;color:#f8f8f8"><span style="color:#89bdff">&lt;<span style="color:#89bdff">section</span> <span style="color:#89bdff">class</span>=<span style="color:#65b042">"night-life"</span>></span>
  <span style="color:#89bdff">&lt;<span style="color:#89bdff">h1</span>></span>NIGHT LIFE IN TEL AVIV<span style="color:#89bdff">&lt;/<span style="color:#89bdff">h1</span>></span>
  <span style="color:#89bdff">&lt;<span style="color:#89bdff">div</span> <span style="color:#89bdff">class</span>=<span style="color:#65b042">"row"</span>></span>
    <span style="color:#89bdff">&lt;<span style="color:#89bdff">div</span> <span style="color:#89bdff">class</span>=<span style="color:#65b042">"column-70"</span>></span>
    <span style="color:#89bdff">&lt;/<span style="color:#89bdff">div</span>></span>
    <span style="color:#89bdff">&lt;<span style="color:#89bdff">div</span> <span style="color:#89bdff">class</span>=<span style="color:#65b042">"column-30"</span>></span>
    <span style="color:#89bdff">&lt;/<span style="color:#89bdff">div</span>></span>
  <span style="color:#89bdff">&lt;/<span style="color:#89bdff">div</span>></span>
<span style="color:#89bdff">&lt;/<span style="color:#89bdff">div</span>></span>
</pre>

    <h5>Style</h5>
    <p>Time to add our CSS to these columns! Add the following. For now we'll give them a background color and arbitrarty height just to make sure the layout is as desired:</p>

    <pre style="background:#000;color:#f8f8f8"><span style="color:#9b703f">.column-70</span> {
  <span style="color:#c5af75">width</span>: <span style="color:#dd7b3b">70<span style="color:#e28964">%</span></span>;
  <span style="color:#c5af75">float</span>: <span style="color:#f9ee98">left</span>;
  <span style="color:#c5af75">height</span>: <span style="color:#dd7b3b">500<span style="color:#e28964">px</span></span>;
  <span style="color:#c5af75">background-color</span>: <span style="color:#cf6a4c">red</span>;
}

<span style="color:#9b703f">.column-30</span> {
  <span style="color:#c5af75">width</span>: <span style="color:#dd7b3b">30<span style="color:#e28964">%</span></span>;
  <span style="color:#c5af75">float</span>: <span style="color:#f9ee98">left</span>;
  <span style="color:#c5af75">height</span>: <span style="color:#dd7b3b">500<span style="color:#e28964">px</span></span>;
  <span style="color:#c5af75">background-color</span>: <span style="color:#cf6a4c">blue</span>;
}
</pre>
    
    <img src="http://www.elevationacademy.co/wp-content/uploads/2016/03/Screen-Shot-2016-03-02-at-8.38.20-AM.png">

    <p>Oh crapola. What happened!? Our section is off centered and doing all kinds of weird things. Our "top-margin" on our section has collapsed becasue we're using floats. Float wasn't designed for the responsive world (it was made to wrap text around images and stuff) but some smart people have created some hacks to make this work. Add the following CSS:</p>

    <pre style="background:#000;color:#f8f8f8"><span style="color:#9b703f">.container</span><span style="color:#89bdff">:before</span>, <span style="color:#9b703f">.row</span><span style="color:#89bdff">:before</span> {
  <span style="color:#c5af75">display</span>: table;
  <span style="color:#c5af75">content</span>: <span style="color:#65b042">""</span>;
}

<span style="color:#9b703f">.container</span><span style="color:#89bdff">:after</span>, <span style="color:#9b703f">.row</span><span style="color:#89bdff">:after</span> {
  <span style="color:#c5af75">display</span>: table;
  <span style="color:#c5af75">content</span>: <span style="color:#65b042">""</span>;
  <span style="color:#c5af75">clear</span>: <span style="color:#f9ee98">both</span>;
}
</pre>

    <p>This is a rather complex hack, but has become widely adopted (it is the EXACT code that Bootstrap uses!). One of the early pioneers of this method (Nicolas Gallagher) explains it like this:</p>

    <p>"This “micro clearfix” generates pseudo-elements and sets their display to table. This creates an anonymous table-cell and a new block formatting context that means the :before pseudo-element prevents top-margin collapse. The :after pseudo-element is used to clear the floats."</p>
  </div>

  <hr>

  <div class="topic">
    <h4>Partner Exercise #1</h4>
    <p>Now with your partner, remove the red and blue colors and style this section correctly making use of your CSS Box Model knowledge. Additionally, for the side-bar header your will need a font called "Merriweather". You can find it as a free google font.</p>
  </div>

  <hr>

  <div class="topic">
    <h4>Partner Exercise #2</h4>
    <p>Add a media query to collapse our two column layout down to 1 column when the screen becomes too small.</p>
  </div>
  
  <hr>
    <h4>Done.</h4>
    <p>When you're finished with these three exercises, call the instructor over.</p>
  </div>
</div>
